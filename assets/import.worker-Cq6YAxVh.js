class i{buffer="";currentRecord=null;currentMetadata=[];isInRecord=!1;totalCount=0;processChunk(e){const t=[],s=(this.buffer+e).split(`
`);this.buffer=s.pop()||"";for(const c of s){const a=c.trim();a&&(a.startsWith("<Record ")?(this.isInRecord=!0,this.currentRecord=this.parseRecordAttributes(a),a.endsWith("/>")&&(this.currentRecord&&(t.push(this.currentRecord),this.totalCount++),this.resetState())):a.startsWith("</Record>")?(this.currentRecord&&(this.currentMetadata.length>0&&(this.currentRecord.metadata=this.currentMetadata),t.push(this.currentRecord),this.totalCount++),this.resetState()):a.startsWith("<MetadataEntry ")&&this.isInRecord&&this.currentMetadata.push(this.parseMetadataAttributes(a)))}return t}parseRecordAttributes(e){const t=this.extractAttributes(e);return{id:this.generateRecordId(t),type:t.type,sourceName:t.sourceName,sourceVersion:t.sourceVersion,device:"device"in t?decodeURI(t.device):void 0,unit:t.unit,value:Number(t.value),creationDate:t.creationDate,startDate:t.startDate,endDate:t.endDate}}parseMetadataAttributes(e){const t=this.extractAttributes(e);return{key:t.key,value:t.value}}extractAttributes(e){const t={},r=e.matchAll(/(\w+)="([^"]+)"/g);for(const s of r)t[s[1]]=s[2];return t}resetState(){this.currentRecord=null,this.currentMetadata=[],this.isInRecord=!1}generateRecordId(e){const t=JSON.stringify(e);console.log("attributes.creationDate:",e.creationDate);let r=0;for(let s=0;s<t.length;s++){const c=t.charCodeAt(s);r=(r<<5)-r+c,r=r&r}return`${Math.abs(r).toString(16)}`}}const n=new i,u=new TextDecoder;self.onmessage=async o=>{try{const e=u.decode(o.data.data),t=n.processChunk(e),r=o.data.offset/o.data.size*100;self.postMessage({records:t,progress:r,totalCount:n.totalCount})}catch(e){self.postMessage({type:"error",error:e})}};
